// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: quDeq6xe5KMiTCfKiiLfyW
// Component: qxP_mbabQsLJ

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName,
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions,
} from "@plasmicapp/react-web/lib/host";

import Header from "../../../.plasmic/Header"; // plasmic-import: gcpmzTU7M7CU/component
import { Video } from "@plasmicpkgs/plasmic-basic-components";
import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import { ParallaxWrapper } from "@plasmicpkgs/react-scroll-parallax";
import Button from "../../../.plasmic/Button"; // plasmic-import: 0EHALpIu9wa4/component
import TextInput from "../../../.plasmic/TextInput"; // plasmic-import: XnjXtIWN8Mpf/component

import { useScreenVariants as useScreenVariantseoIIho6Ui3Kx } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: eoIIho6UI3KX/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: quDeq6xe5KMiTCfKiiLfyW/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: qxP_mbabQsLJ/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: V1vTcJ7LDU0C/icon
import SearchSvgIcon from "./icons/PlasmicIcon__SearchSvg"; // plasmic-import: Z93vWIe_4pqs/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: BwyLbx4ji86E/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: PIXAzqbnOfyz/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: oRFoTF1kvTrk/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  headerMainSection?: Flex__<"div">;
  container?: Flex__<"div">;
  header?: Flex__<typeof Header>;
  section19?: Flex__<"div">;
  rowContainer15?: Flex__<"div">;
  brownColorBg?: Flex__<"div">;
  section12?: Flex__<"div">;
  rowContainer3?: Flex__<"div">;
  section13?: Flex__<"div">;
  rowContainer9?: Flex__<"div">;
  section14?: Flex__<"div">;
  rowContainer10?: Flex__<"div">;
  section15?: Flex__<"div">;
  rowContainer11?: Flex__<"div">;
  section16?: Flex__<"div">;
  rowContainer12?: Flex__<"div">;
  section17?: Flex__<"div">;
  rowContainer13?: Flex__<"div">;
  section18?: Flex__<"div">;
  rowContainer14?: Flex__<"div">;
  section1?: Flex__<"div">;
  rowContainer8?: Flex__<"div">;
  textInput?: Flex__<typeof TextInput>;
  blockquote?: Flex__<"blockquote">;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants,
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "",
      },
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs,
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantseoIIho6Ui3Kx(),
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"headerMainSection"}
            data-plasmic-override={overrides.headerMainSection}
            className={classNames(projectcss.all, sty.headerMainSection)}
          >
            <div
              data-plasmic-name={"container"}
              data-plasmic-override={overrides.container}
              className={classNames(projectcss.all, sty.container)}
            >
              <Header
                data-plasmic-name={"header"}
                data-plasmic-override={overrides.header}
                className={classNames("__wab_instance", sty.header)}
              />

              <div className={classNames(projectcss.all, sty.freeBox___4KHpT)}>
                <Video
                  autoPlay={true}
                  className={classNames("__wab_instance", sty.htmlVideo__xdXpn)}
                  controls={false}
                  loop={true}
                  muted={true}
                  src={
                    "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                  }
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox___3Kpfw)}
                >
                  <Video
                    autoPlay={true}
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo___7DC8C
                    )}
                    controls={false}
                    loop={true}
                    muted={true}
                    playsInline={true}
                    poster={
                      "/plasmic/sincerely_sri_lankan_website/images/logoYellowPng.png"
                    }
                    src={
                      "https://drive.google.com/file/d/1AVWsNxyb0LsVAgSqm7Y6e7DB3OQPkcwM/view?usp=drive_link"
                    }
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___5BzM)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/sincerely_sri_lankan_website/images/image6.png",
                      fullWidth: 995,
                      fullHeight: 539,
                      aspectRatio: undefined,
                    }}
                  />

                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1___2WYT
                    )}
                  >
                    {"Sri Lanka the perfect destination"}
                  </h1>
                </div>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___9YnhJ)}
              >
                <div
                  className={classNames(projectcss.all, sty.columns___4HbUj)}
                >
                  <div className={classNames(projectcss.all, sty.column__oQXz)}>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ik6Ja)}
                    />
                  </div>
                </div>
              </Stack__>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__m3FRt)}>
            <div
              data-plasmic-name={"section19"}
              data-plasmic-override={overrides.section19}
              className={classNames(projectcss.all, sty.section19)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"rowContainer15"}
                data-plasmic-override={overrides.rowContainer15}
                hasGap={true}
                className={classNames(projectcss.all, sty.rowContainer15)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1___5Hi59
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "About our hotel"
                    : "Why should you visit Sri Lanka?"}
                </h1>
              </Stack__>
            </div>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___1HYvc)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/sincerely_sri_lankan_website/images/image10.png",
                fullWidth: 800,
                fullHeight: 195,
                aspectRatio: undefined,
              }}
            />
          </div>
          <div
            data-plasmic-name={"brownColorBg"}
            data-plasmic-override={overrides.brownColorBg}
            className={classNames(projectcss.all, sty.brownColorBg)}
          >
            <Reveal
              cascade={true}
              className={classNames("__wab_instance", sty.reveal__zOtIx)}
              delay={2}
              direction={"left"}
              effect={"jackinthebox"}
              triggerOnce={true}
            >
              <div
                data-plasmic-name={"section12"}
                data-plasmic-override={overrides.section12}
                className={classNames(projectcss.all, sty.section12)}
              >
                <ParallaxWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.scrollParallax___4Qwil
                  )}
                  speed={-5}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__md63J)}
                  >
                    <div
                      data-plasmic-name={"rowContainer3"}
                      data-plasmic-override={overrides.rowContainer3}
                      className={classNames(projectcss.all, sty.rowContainer3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__lUe2X
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__qBcXl
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__rjl6)}
                            displayHeight={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "230px"
                                : "415px"
                            }
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            height={"503"}
                            loading={"lazy"}
                            onScroll={async (event) => {
                              const $steps = {};

                              $steps["updateTextInputValue"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["textInput", "value"],
                                      },
                                      operation: 0,
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount,
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateTextInputValue"] != null &&
                                typeof $steps["updateTextInputValue"] ===
                                  "object" &&
                                typeof $steps["updateTextInputValue"].then ===
                                  "function"
                              ) {
                                $steps["updateTextInputValue"] = await $steps[
                                  "updateTextInputValue"
                                ];
                              }
                            }}
                            src={
                              "https://clickstay.s3-eu-west-1.amazonaws.com/images/blog/post/shutterstock_539320075.jpg"
                            }
                            width={"739"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__sQmD6
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ugFig
                            )}
                          >
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__tuRj
                              )}
                              speed={5}
                            >
                              <h2
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h2,
                                  projectcss.__wab_text,
                                  sty.h2___2ZemQ
                                )}
                              >
                                {"Breathtaking Landscapes"}
                              </h2>
                            </ParallaxWrapper>
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__jQwRx
                              )}
                              speed={10}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__hvR1N
                                )}
                              >
                                {hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                                  : "From golden beaches to misty mountains, Sri Lanka\u2019s landscapes are a dream. Relax by the ocean, hike through lush tea fields, or chase waterfalls all within a few hours' travel."}
                              </div>
                            </ParallaxWrapper>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__zWdUs
                              )}
                              color={"softBlue"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___6H8K4
                                )}
                              >
                                {"Our Room"}
                              </div>
                            </Button>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__nHeSk
                              )}
                              color={"sand"}
                              link={"#"}
                              submitsForm={true}
                            >
                              {"View our rooms"}
                            </Button>
                          </Stack__>
                        </div>
                      </div>
                    </div>
                  </div>
                </ParallaxWrapper>
              </div>
            </Reveal>
            <Reveal
              cascade={true}
              className={classNames("__wab_instance", sty.reveal___8FEs)}
              delay={2}
              direction={"right"}
              effect={"jackinthebox"}
              triggerOnce={true}
            >
              <div
                data-plasmic-name={"section13"}
                data-plasmic-override={overrides.section13}
                className={classNames(projectcss.all, sty.section13)}
              >
                <ParallaxWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.scrollParallax__eh7Lj
                  )}
                  speed={-5}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zPfGm)}
                  >
                    <div
                      data-plasmic-name={"rowContainer9"}
                      data-plasmic-override={overrides.rowContainer9}
                      className={classNames(projectcss.all, sty.rowContainer9)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__diVrK
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__dsIOs
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__wsSy)}
                            displayHeight={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "230px"
                                : "415px"
                            }
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            height={"1125"}
                            loading={"lazy"}
                            src={
                              "https://archaeology-travel.com/cdn-cgi/image/quality=90,format=auto,onerror=redirect,metadata=none/wp-content/uploads/2024/02/sigiriya-sunrise.jpg"
                            }
                            width={"2000"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___6B0B6
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qBgrr
                            )}
                          >
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax___8Fk4Y
                              )}
                              speed={5}
                            >
                              <h2
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h2,
                                  projectcss.__wab_text,
                                  sty.h2___4TDEe
                                )}
                              >
                                {"Rich History & Culture"}
                              </h2>
                            </ParallaxWrapper>
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__exmhu
                              )}
                              speed={10}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__pOcYs
                                )}
                              >
                                {hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                                  : "Step back in time with ancient ruins, sacred temples, and colonial forts. Every city has a story, blending centuries-old traditions with vibrant local life."}
                              </div>
                            </ParallaxWrapper>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__thKsz
                              )}
                              color={"sand"}
                              link={"#"}
                              submitsForm={true}
                            >
                              {"View our rooms"}
                            </Button>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__pSkDl
                              )}
                              color={"softBlue"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kTcCd
                                )}
                              >
                                {"Our Room"}
                              </div>
                            </Button>
                          </Stack__>
                        </div>
                      </div>
                    </div>
                  </div>
                </ParallaxWrapper>
              </div>
            </Reveal>
            <Reveal
              cascade={true}
              className={classNames("__wab_instance", sty.reveal__rtvTw)}
              delay={2}
              effect={"jackinthebox"}
              triggerOnce={true}
            >
              <div
                data-plasmic-name={"section14"}
                data-plasmic-override={overrides.section14}
                className={classNames(projectcss.all, sty.section14)}
              >
                <ParallaxWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.scrollParallax__rbUgo
                  )}
                  speed={-5}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gbd1R)}
                  >
                    <div
                      data-plasmic-name={"rowContainer10"}
                      data-plasmic-override={overrides.rowContainer10}
                      className={classNames(projectcss.all, sty.rowContainer10)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__why5N
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__imyUd
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__yhsRe)}
                            displayHeight={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "230px"
                                : "415px"
                            }
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            height={"360"}
                            loading={"lazy"}
                            src={
                              "https://t3.ftcdn.net/jpg/11/91/21/82/360_F_1191218234_LDG1wkhDT1P7eozV6RmeRAY1eApc8o0s.jpg"
                            }
                            width={"643"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__rkqC
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__wGly
                            )}
                          >
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__tbDg3
                              )}
                              speed={5}
                            >
                              <h2
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h2,
                                  projectcss.__wab_text,
                                  sty.h2__vr0Sh
                                )}
                              >
                                {"Delicious Food"}
                              </h2>
                            </ParallaxWrapper>
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__peOY
                              )}
                              speed={10}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__vxYo
                                )}
                              >
                                {hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                                  : "Spice up your journey with bold flavors! Enjoy aromatic rice and curry, sizzling kottu roti, and fresh seafood, all made with locally sourced ingredients."}
                              </div>
                            </ParallaxWrapper>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__ythkX
                              )}
                              color={"sand"}
                              link={"#"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__gUFz
                                )}
                              >
                                {"View our rooms"}
                              </div>
                            </Button>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__oQmKp
                              )}
                              color={"softBlue"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___9DL5
                                )}
                              >
                                {"Our Room"}
                              </div>
                            </Button>
                          </Stack__>
                        </div>
                      </div>
                    </div>
                  </div>
                </ParallaxWrapper>
              </div>
            </Reveal>
            <Reveal
              cascade={true}
              className={classNames("__wab_instance", sty.reveal__clyOx)}
              delay={2}
              effect={"jackinthebox"}
              triggerOnce={true}
            >
              <div
                data-plasmic-name={"section15"}
                data-plasmic-override={overrides.section15}
                className={classNames(projectcss.all, sty.section15)}
              >
                <ParallaxWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.scrollParallax__w5TBu
                  )}
                  speed={-5}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0Q9ZB)}
                  >
                    <div
                      data-plasmic-name={"rowContainer11"}
                      data-plasmic-override={overrides.rowContainer11}
                      className={classNames(projectcss.all, sty.rowContainer11)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__n1Cbl
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__ixJ37
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___6KFko)}
                            displayHeight={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "230px"
                                : "415px"
                            }
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            height={"800"}
                            loading={"lazy"}
                            src={
                              "https://www.latexforless.com/cdn/shop/articles/Sri_Lanka_1400x.progressive.jpg?v=1571077290"
                            }
                            width={"1129"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__cBxIu
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__so05W
                            )}
                          >
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__vpNv2
                              )}
                              speed={5}
                            >
                              <h2
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h2,
                                  projectcss.__wab_text,
                                  sty.h2__jKk3S
                                )}
                              >
                                {"Adventure &\nOutdoor Activities"}
                              </h2>
                            </ParallaxWrapper>
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__zzh8T
                              )}
                              speed={10}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__h9B4Y
                                )}
                              >
                                {hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                                  : "Surf world-class waves, trek through scenic trails, or take a wildlife safari. Whether on land or sea, adventure is always within reach."}
                              </div>
                            </ParallaxWrapper>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__yxPkl
                              )}
                              color={"sand"}
                              link={"#"}
                              submitsForm={true}
                            >
                              {"View our rooms"}
                            </Button>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__w9JOd
                              )}
                              color={"softBlue"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___1HBff
                                )}
                              >
                                {"Our Room"}
                              </div>
                            </Button>
                          </Stack__>
                        </div>
                      </div>
                    </div>
                  </div>
                </ParallaxWrapper>
              </div>
            </Reveal>
            <Reveal
              cascade={true}
              className={classNames("__wab_instance", sty.reveal___2JuW)}
              delay={2}
              effect={"jackinthebox"}
              triggerOnce={true}
            >
              <div
                data-plasmic-name={"section16"}
                data-plasmic-override={overrides.section16}
                className={classNames(projectcss.all, sty.section16)}
              >
                <ParallaxWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.scrollParallax__tSo4F
                  )}
                  speed={-5}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qwXq)}
                  >
                    <div
                      data-plasmic-name={"rowContainer12"}
                      data-plasmic-override={overrides.rowContainer12}
                      className={classNames(projectcss.all, sty.rowContainer12)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__c9TP
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__nqXoT
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___1V0)}
                            displayHeight={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "230px"
                                : "415px"
                            }
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            height={"525"}
                            loading={"lazy"}
                            src={
                              "https://i.insider.com/5c3b3553dde867481729e302?width=700"
                            }
                            width={"700"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__dl1X
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ovEZ
                            )}
                          >
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__njJpi
                              )}
                              speed={5}
                            >
                              <h2
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h2,
                                  projectcss.__wab_text,
                                  sty.h2__uYtwf
                                )}
                              >
                                {"Perfect Weather All Year"}
                              </h2>
                            </ParallaxWrapper>
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__nHyW8
                              )}
                              speed={10}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__r7ZC4
                                )}
                              >
                                {hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                                  : "With warm tropical weather year-round, there\u2019s always a perfect time to visit. Plan your trip based on the season and explore without limits."}
                              </div>
                            </ParallaxWrapper>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__zZrm
                              )}
                              color={"sand"}
                              link={"#"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__vBdAy
                                )}
                              >
                                {"View our rooms"}
                              </div>
                            </Button>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__dXrmu
                              )}
                              color={"softBlue"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uWqfS
                                )}
                              >
                                {"Our Room"}
                              </div>
                            </Button>
                          </Stack__>
                        </div>
                      </div>
                    </div>
                  </div>
                </ParallaxWrapper>
              </div>
            </Reveal>
            <Reveal
              cascade={true}
              className={classNames("__wab_instance", sty.reveal__ddukO)}
              delay={2}
              effect={"jackinthebox"}
              triggerOnce={true}
            >
              <div
                data-plasmic-name={"section17"}
                data-plasmic-override={overrides.section17}
                className={classNames(projectcss.all, sty.section17)}
              >
                <ParallaxWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.scrollParallax__d9O3M
                  )}
                  speed={-5}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dp9SN)}
                  >
                    <div
                      data-plasmic-name={"rowContainer13"}
                      data-plasmic-override={overrides.rowContainer13}
                      className={classNames(projectcss.all, sty.rowContainer13)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns__uygsc
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___1IBpg
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__rcsdI)}
                            displayHeight={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "230px"
                                : "415px"
                            }
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            height={"700"}
                            loading={"lazy"}
                            src={
                              "https://dz3vy4jhqsnnj.cloudfront.net/sites/10/2024/06/Ayuwasa-Ayurveda-Centre-05-950.jpg"
                            }
                            width={"950"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___68Un6
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__wCdzs
                            )}
                          >
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax___9PfU1
                              )}
                              speed={5}
                            >
                              <h2
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h2,
                                  projectcss.__wab_text,
                                  sty.h2__iNr5A
                                )}
                              >
                                {"Wellness & Relaxation"}
                              </h2>
                            </ParallaxWrapper>
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax___9Qsfj
                              )}
                              speed={10}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jSd01
                                )}
                              >
                                {hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                                  : "Rejuvenate with Ayurveda, yoga, and meditation. Find your balance in peaceful retreats surrounded by nature\u2019s serenity."}
                              </div>
                            </ParallaxWrapper>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__gzNzn
                              )}
                              color={"sand"}
                              link={"#"}
                              submitsForm={true}
                            >
                              {"View our rooms"}
                            </Button>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__tIYyS
                              )}
                              color={"softBlue"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nXdsb
                                )}
                              >
                                {"Our Room"}
                              </div>
                            </Button>
                          </Stack__>
                        </div>
                      </div>
                    </div>
                  </div>
                </ParallaxWrapper>
              </div>
            </Reveal>
            <Reveal
              cascade={true}
              className={classNames("__wab_instance", sty.reveal__iOzYk)}
              delay={2}
              effect={"jackinthebox"}
              triggerOnce={true}
            >
              <div
                data-plasmic-name={"section18"}
                data-plasmic-override={overrides.section18}
                className={classNames(projectcss.all, sty.section18)}
              >
                <ParallaxWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.scrollParallax__sWyAq
                  )}
                  speed={-5}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6HdO3)}
                  >
                    <div
                      data-plasmic-name={"rowContainer14"}
                      data-plasmic-override={overrides.rowContainer14}
                      className={classNames(projectcss.all, sty.rowContainer14)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.columns___09Ozp
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__xCPp
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___7Jxs)}
                            displayHeight={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "230px"
                                : "415px"
                            }
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            height={"408"}
                            loading={"lazy"}
                            src={
                              "https://media.istockphoto.com/id/1191557800/photo/water-fall.jpg?s=612x612&w=0&k=20&c=jOPXVab1an1MBvC-oZvmi3_Bi7kpeFN2h0BpRhpP-Ng="
                            }
                            width={"612"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__a8Eu
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yx6Xv
                            )}
                          >
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__waTvr
                              )}
                              speed={5}
                            >
                              <h2
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h2,
                                  projectcss.__wab_text,
                                  sty.h2__fpoSt
                                )}
                              >
                                {"Budget-Friendly Destination"}
                              </h2>
                            </ParallaxWrapper>
                            <ParallaxWrapper
                              className={classNames(
                                "__wab_instance",
                                sty.scrollParallax__nmnCm
                              )}
                              speed={10}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lUsZ1
                                )}
                              >
                                {hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ."
                                  : "Luxury or budget Sri Lanka offers incredible experiences for every traveler. Enjoy affordable stays, delicious meals, and unforgettable moments without overspending."}
                              </div>
                            </ParallaxWrapper>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__hm5Qt
                              )}
                              color={"sand"}
                              link={"#"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__mw4P
                                )}
                              >
                                {"View our rooms"}
                              </div>
                            </Button>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__f65DW
                              )}
                              color={"softBlue"}
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__pIXca
                                )}
                              >
                                {"Our Room"}
                              </div>
                            </Button>
                          </Stack__>
                        </div>
                      </div>
                    </div>
                  </div>
                </ParallaxWrapper>
              </div>
            </Reveal>
            <div className={classNames(projectcss.all, sty.freeBox___8JqAf)} />
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__zzVxu)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__mnYw)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/sincerely_sri_lankan_website/images/image3.png",
                fullWidth: 1501,
                fullHeight: 1016,
                aspectRatio: undefined,
              }}
            />

            <div
              data-plasmic-name={"section1"}
              data-plasmic-override={overrides.section1}
              className={classNames(projectcss.all, sty.section1)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"rowContainer8"}
                data-plasmic-override={overrides.rowContainer8}
                hasGap={true}
                className={classNames(projectcss.all, sty.rowContainer8)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__uYx5
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "About our hotel"
                    : "What is AIESEC in Sri Lanka?"}
                </h1>
              </Stack__>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__il1Fw)}>
            <Reveal
              cascade={false}
              className={classNames("__wab_instance", sty.reveal___1DLej)}
              reverse={false}
              triggerOnce={true}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__piGjt)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__lyZUj)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__m1OXt
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur."
                    }
                  </div>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__gNuxd)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"50%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/sincerely_sri_lankan_website/images/image3.png",
                    fullWidth: 1501,
                    fullHeight: 1016,
                    aspectRatio: undefined,
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__qmIye)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"50%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/sincerely_sri_lankan_website/images/image5.png",
                    fullWidth: 200,
                    fullHeight: 200,
                    aspectRatio: undefined,
                  }}
                />
              </Stack__>
            </Reveal>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__k6IFy)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___0Gym8)}
            >
              <Reveal
                className={classNames("__wab_instance", sty.reveal__ilwFj)}
                triggerOnce={true}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__jkjEp)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__aLm0U)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__lAbe1)}
                      displayHeight={"434px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "none"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/sincerely_sri_lankan_website/images/image7.png",
                        fullWidth: 741,
                        fullHeight: 347,
                        aspectRatio: undefined,
                      }}
                    />

                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__xjcEd
                      )}
                      component={Link}
                      href={
                        "https://docs.google.com/spreadsheets/d/1j6IkDXwEbCLA2Jt2YYuJcL8E2YTnYjudADOAVxirjZI/edit?usp=sharing"
                      }
                      platform={"nextjs"}
                      target={"_blank"}
                      title={"National iGV Tool"}
                    >
                      {"Volunteer with AIESEC"}
                    </PlasmicLink__>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__nEalp)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__wRvQc)}
                      displayHeight={"434px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "none"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/sincerely_sri_lankan_website/images/image8.png",
                        fullWidth: 600,
                        fullHeight: 360,
                        aspectRatio: undefined,
                      }}
                    />

                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__j6Ayp
                      )}
                      component={Link}
                      href={
                        "https://docs.google.com/spreadsheets/d/1j6IkDXwEbCLA2Jt2YYuJcL8E2YTnYjudADOAVxirjZI/edit?usp=sharing"
                      }
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {"Intern with AIESEC"}
                    </PlasmicLink__>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__qSvtY)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___8WesR)}
                      displayHeight={"434px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "none"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/sincerely_sri_lankan_website/images/image9.png",
                        fullWidth: 750,
                        fullHeight: 454,
                        aspectRatio: undefined,
                      }}
                    />

                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__w58TR
                      )}
                      component={Link}
                      href={
                        "https://docs.google.com/spreadsheets/d/1j6IkDXwEbCLA2Jt2YYuJcL8E2YTnYjudADOAVxirjZI/edit?usp=sharing"
                      }
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {"Teach with AIESEC"}
                    </PlasmicLink__>
                  </div>
                </Stack__>
              </Reveal>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__rqYtG)}>
            <div className={classNames(projectcss.all, sty.columns__qyWmf)}>
              <div className={classNames(projectcss.all, sty.column__jnXms)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xGpIg)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__i5Up
                    )}
                  >
                    {"Stay posted on special offers and promos"}
                  </h2>
                  <TextInput
                    data-plasmic-name={"textInput"}
                    data-plasmic-override={overrides.textInput}
                    className={classNames("__wab_instance", sty.textInput)}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "textInput",
                          "value",
                        ])(((e) => e.target?.value).apply(null, eventArgs));
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    placeholder={"Email  Address"}
                    value={
                      generateStateValueProp($state, ["textInput", "value"]) ??
                      ""
                    }
                  />

                  <Button
                    className={classNames("__wab_instance", sty.button__onY1)}
                    color={"sand"}
                    onClick={async (event) => {
                      const $steps = {};
                    }}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oxWsC
                      )}
                    >
                      {"Submit"}
                    </div>
                  </Button>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__lvFlR)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1NQdg)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__z0Hgg
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Contact us"
                      : "Contact us"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v2MwH
                    )}
                  >
                    {"No 102/2, Nagahawatta Road,\nMaharagama, Sri Lanka"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bp5AO
                    )}
                  >
                    {"P: +94 112 746 190"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pdEIq
                    )}
                  >
                    {"E: xyz@yourcompany.com"}
                  </div>
                </Stack__>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__x6PGy)}>
            <div className={classNames(projectcss.all, sty.freeBox__ndvGf)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__e6SaQ)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gv53Y)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__d8RoU)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__vdx7G)}
                    >
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__mkxtd
                        )}
                        component={Link}
                        href={"#"}
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CONTACT US        CAREERS        PRIVACY        FAQ"
                          : "Contact"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__t5W
                        )}
                        component={Link}
                        href={"#"}
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CONTACT US        CAREERS        PRIVACY        FAQ"
                          : "FAQ"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__yO11R
                        )}
                        component={Link}
                        href={"#"}
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CONTACT US        CAREERS        PRIVACY        FAQ"
                          : "About us"}
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__nmwq8
                        )}
                        component={Link}
                        href={"#"}
                        platform={"nextjs"}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "CONTACT US        CAREERS        PRIVACY        FAQ"
                          : "Privacy policy"}
                      </PlasmicLink__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__udv5F)}
                    >
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__gRHuH
                        )}
                        component={Link}
                        href={"#"}
                        platform={"nextjs"}
                        target={"_blank"}
                      >
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__ebTyJ)}
                          role={"img"}
                        />
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__hWmAv
                        )}
                        component={Link}
                        href={"#"}
                        platform={"nextjs"}
                        target={"_blank"}
                      >
                        <Icon2Icon
                          className={classNames(projectcss.all, sty.svg__aDsJd)}
                          role={"img"}
                        />
                      </PlasmicLink__>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__fBwEh
                        )}
                        component={Link}
                        href={"#"}
                        platform={"nextjs"}
                        target={"_blank"}
                      >
                        <Icon28Icon
                          className={classNames(projectcss.all, sty.svg__vn4Gl)}
                          role={"img"}
                        />
                      </PlasmicLink__>
                    </Stack__>
                    <blockquote
                      data-plasmic-name={"blockquote"}
                      data-plasmic-override={overrides.blockquote}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.blockquote
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "\u00a9 Company. All rights reserved. This site proudly built with "
                          }
                        </React.Fragment>
                        {
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.link__elJiN
                            )}
                            component={Link}
                            href={"https://www.plasmic.app"}
                            platform={"nextjs"}
                          >
                            {"Plasmic"}
                          </PlasmicLink__>
                        }
                        <React.Fragment>{"."}</React.Fragment>
                      </React.Fragment>
                    </blockquote>
                  </Stack__>
                </Stack__>
              </Stack__>
            </div>
          </div>
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerMainSection",
    "container",
    "header",
    "section19",
    "rowContainer15",
    "brownColorBg",
    "section12",
    "rowContainer3",
    "section13",
    "rowContainer9",
    "section14",
    "rowContainer10",
    "section15",
    "rowContainer11",
    "section16",
    "rowContainer12",
    "section17",
    "rowContainer13",
    "section18",
    "rowContainer14",
    "section1",
    "rowContainer8",
    "textInput",
    "blockquote",
  ],
  headerMainSection: ["headerMainSection", "container", "header"],
  container: ["container", "header"],
  header: ["header"],
  section19: ["section19", "rowContainer15"],
  rowContainer15: ["rowContainer15"],
  brownColorBg: [
    "brownColorBg",
    "section12",
    "rowContainer3",
    "section13",
    "rowContainer9",
    "section14",
    "rowContainer10",
    "section15",
    "rowContainer11",
    "section16",
    "rowContainer12",
    "section17",
    "rowContainer13",
    "section18",
    "rowContainer14",
  ],
  section12: ["section12", "rowContainer3"],
  rowContainer3: ["rowContainer3"],
  section13: ["section13", "rowContainer9"],
  rowContainer9: ["rowContainer9"],
  section14: ["section14", "rowContainer10"],
  rowContainer10: ["rowContainer10"],
  section15: ["section15", "rowContainer11"],
  rowContainer11: ["rowContainer11"],
  section16: ["section16", "rowContainer12"],
  rowContainer12: ["rowContainer12"],
  section17: ["section17", "rowContainer13"],
  rowContainer13: ["rowContainer13"],
  section18: ["section18", "rowContainer14"],
  rowContainer14: ["rowContainer14"],
  section1: ["section1", "rowContainer8"],
  rowContainer8: ["rowContainer8"],
  textInput: ["textInput"],
  blockquote: ["blockquote"],
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerMainSection: "div";
  container: "div";
  header: typeof Header;
  section19: "div";
  rowContainer15: "div";
  brownColorBg: "div";
  section12: "div";
  rowContainer3: "div";
  section13: "div";
  rowContainer9: "div";
  section14: "div";
  rowContainer10: "div";
  section15: "div";
  rowContainer11: "div";
  section16: "div";
  rowContainer12: "div";
  section17: "div";
  rowContainer13: "div";
  section18: "div";
  rowContainer14: "div";
  section1: "div";
  rowContainer8: "div";
  textInput: typeof TextInput;
  blockquote: "blockquote";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps,
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerMainSection: makeNodeComponent("headerMainSection"),
    container: makeNodeComponent("container"),
    header: makeNodeComponent("header"),
    section19: makeNodeComponent("section19"),
    rowContainer15: makeNodeComponent("rowContainer15"),
    brownColorBg: makeNodeComponent("brownColorBg"),
    section12: makeNodeComponent("section12"),
    rowContainer3: makeNodeComponent("rowContainer3"),
    section13: makeNodeComponent("section13"),
    rowContainer9: makeNodeComponent("rowContainer9"),
    section14: makeNodeComponent("section14"),
    rowContainer10: makeNodeComponent("rowContainer10"),
    section15: makeNodeComponent("section15"),
    rowContainer11: makeNodeComponent("rowContainer11"),
    section16: makeNodeComponent("section16"),
    rowContainer12: makeNodeComponent("rowContainer12"),
    section17: makeNodeComponent("section17"),
    rowContainer13: makeNodeComponent("rowContainer13"),
    section18: makeNodeComponent("section18"),
    rowContainer14: makeNodeComponent("rowContainer14"),
    section1: makeNodeComponent("section1"),
    rowContainer8: makeNodeComponent("rowContainer8"),
    textInput: makeNodeComponent("textInput"),
    blockquote: makeNodeComponent("blockquote"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: "",
    },
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
